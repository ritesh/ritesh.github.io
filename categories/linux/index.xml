<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on blog</title>
    <link>https://blog.rsinha.org/categories/linux/</link>
    <description>Recent content in Linux on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 05 Apr 2015 19:35:03 +0000</lastBuildDate>
    
	<atom:link href="https://blog.rsinha.org/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Inhibiting Sleep on Xubuntu 14.04</title>
      <link>https://blog.rsinha.org/2015/04/05/inhibiting-sleep-on-xubuntu-14-04/</link>
      <pubDate>Sun, 05 Apr 2015 19:35:03 +0000</pubDate>
      
      <guid>https://blog.rsinha.org/2015/04/05/inhibiting-sleep-on-xubuntu-14-04/</guid>
      <description>My work laptop ships with proprietary encryption software that encrypts the disk drive (a self-encrypting drive) when turned off or in sleep mode. This works perfectly fine on Windows 7, but having rid my laptop of Windows in favour of Xubuntu, I soon realised that a day-to-day Linux desktop is for masochists.
When the computer is set to sleep mode, the disk drive locks and Xubuntu doesn&amp;rsquo;t know how to unlock it when it wakes back up.</description>
    </item>
    
    <item>
      <title>Chunky binaries and bsdiff</title>
      <link>https://blog.rsinha.org/2015/01/14/chunky-binaries-and-bsdiff/</link>
      <pubDate>Wed, 14 Jan 2015 12:19:54 +0000</pubDate>
      
      <guid>https://blog.rsinha.org/2015/01/14/chunky-binaries-and-bsdiff/</guid>
      <description>I&amp;rsquo;ve lately taken an interest in golang as it seems to be the language du jour for web-services. My goto (hah) framework for writing tiny web applications is usually Flask (Python), which is still great for many things. One of my biggest gripes with Flask, and Python web applications in general, is the approach towards deploying 3rd party dependencies along with your application. Go&amp;rsquo;s approach to package management is a bit odd coming from Python-land, but it has the advantage of ensuring that your application doesn&amp;rsquo;t require 3rd party packages installed at runtime.</description>
    </item>
    
    <item>
      <title>Getting Live USB sticks to boot consistently</title>
      <link>https://blog.rsinha.org/2013/11/12/getting-live-usb-sticks-to-boot-consistently/</link>
      <pubDate>Tue, 12 Nov 2013 20:53:18 +0000</pubDate>
      
      <guid>https://blog.rsinha.org/2013/11/12/getting-live-usb-sticks-to-boot-consistently/</guid>
      <description>Occasionally I like to boot my desktop running Windows from a USB stick to try out the latest version of a Linux distribution on hardware &amp;ndash; as opposed to running it in VirtualBox. I remember that this used to be straightforward on my old Acer laptop, but it&amp;rsquo;s hit and miss on my desktop. I&amp;rsquo;ve not quite figured out why boot-from-USB fails occasionally, but I&amp;rsquo;ve found great way around it.</description>
    </item>
    
    <item>
      <title>Giving up on Linux desktop</title>
      <link>https://blog.rsinha.org/2012/09/15/giving-up-on-native-linux/</link>
      <pubDate>Sat, 15 Sep 2012 21:36:28 +0000</pubDate>
      
      <guid>https://blog.rsinha.org/2012/09/15/giving-up-on-native-linux/</guid>
      <description>I recently acquired a shiny new-ish desktop from a friend. Intel Core-i7 with 8 cores and a whopping 12 GB of RAM with a high-end ATI Radeon graphics card. It came with Windows 7 pre-installed and I decided to install Ubuntu 12.04 amd64 as a dual boot option. Initially, I had some trouble getting it to install on the inbuilt SSD (which should have been the first warning sign in retrospect).</description>
    </item>
    
    <item>
      <title>Prevent accidental rm</title>
      <link>https://blog.rsinha.org/2012/05/05/prevent-accidental-rm/</link>
      <pubDate>Sat, 05 May 2012 15:53:46 +0000</pubDate>
      
      <guid>https://blog.rsinha.org/2012/05/05/prevent-accidental-rm/</guid>
      <description>If you&amp;rsquo;re anything like me, you might casually type rm -rf * in your home directory when you really meant to delete the contents of another directory. You should, of course, always have a backup of the contents of your home directory just in case this happens.
There is simple hack to force rm to prompt you to think about the files that are going to be deleted. Create a file called &amp;lsquo;-i&amp;rsquo; in the directory whose contents you want to protect from accidental deletion.</description>
    </item>
    
    <item>
      <title>Do batch things well</title>
      <link>https://blog.rsinha.org/2011/12/04/do-batch-things-well/</link>
      <pubDate>Sun, 04 Dec 2011 11:24:19 +0000</pubDate>
      
      <guid>https://blog.rsinha.org/2011/12/04/do-batch-things-well/</guid>
      <description>I sometimes forget this really easy one liner for doing things in a batch on Linux/MacOS.
# for file in `find . -type f`; do somescript.py $file; done  If you&amp;rsquo;re relying on the output of find it is probably best to use the xargs option to find like so:
# find . -type f -print0 | xargs -0 somescript.py  Even better, you can avoid using xargs, instead use the exec option to find.</description>
    </item>
    
    <item>
      <title>Creating an Animated GIF</title>
      <link>https://blog.rsinha.org/2011/11/12/creating-an-animated-gif/</link>
      <pubDate>Sat, 12 Nov 2011 13:32:09 +0000</pubDate>
      
      <guid>https://blog.rsinha.org/2011/11/12/creating-an-animated-gif/</guid>
      <description>There are many ways to do this. You could use Windows Movie Maker, iMovie or professional movie editing applications. If you&amp;rsquo;re looking for something quick and dirty from the command line, especially if you have all images in one directory and they don&amp;rsquo;t require any post processing, ImageMagick can help.
ImageMagick is available for for Windows, Linux and MacOS X. The convert utility that comes with it is probably one of the most useful utilities I&amp;rsquo;ve ever used.</description>
    </item>
    
    <item>
      <title>Not one Music player</title>
      <link>https://blog.rsinha.org/posts/not-one-music-player-on-karmic-can-sync-with-a-friggin-ipod/</link>
      <pubDate>Tue, 10 Nov 2009 18:03:00 +0000</pubDate>
      
      <guid>https://blog.rsinha.org/posts/not-one-music-player-on-karmic-can-sync-with-a-friggin-ipod/</guid>
      <description>All I want is for my podcasts to automatically sync with my ancient
iPod. So far, not one media player on Ubuntu Karmic can accomplish
this. Tried Rhythmbox, banshee, Amarok. FFFFFFUUUUUUUUUU!!!!</description>
    </item>
    
  </channel>
</rss>